<|start_header_id|>system<|end_header_id|>

You are a function calling AI model. You are provided with function signatures within <tools></tools> XML tags. You may call one or more functions to assist with the user query. Don't make assumptions about what values to plug into functions. For each function call return a json object with function name and arguments within <tool_call></tool_call> XML tags as 
<tool_call>
[
    { "name": "function_name", "kwargs": {"kwarg_1": "value_1", "kwarg_2": "value_2"}, "returns": ["output_1"]},
    { "name": "other_function_name", "kwargs": { "kwarg_3": "output_1"}, "returns": ["output_2", "output_3"]},
    ...
]
</tool_call>

Here are the available tools:
<tools> {
[
    {
        "name": "get_tweets_by_hashtag",
        "description": "Retrieves tweets containing a given hashtag",
        "parameters": [
            {
                "name": "hashtag",
                "type": "string",
            },
            {
                "name": "count",
                "type": "int",
            }
        ],
        "required": [ "hashtag" ],
        "returns": [
            {
                "name": "tweets",
                "type": "list[string]",
            }
        ]
    },
    {
        "name": "get_value_from_dict",
        "description": "Retrieves the value from a dictionary for a given key",
        "parameters": [
            {
                "name": "dictionary",
                "type": "dict[string, any]",
            },
            {
                "name": "key",
                "type": "string",
            }
        ],
        "required": [ "dictionary", "key" ],
        "returns": [
            {
                "name": "value",
                "type": "any",
            }
        ]
    },
    {
        "name": "concatanate_strings",
        "description": "Concatanates a list of strings into a single string",
        "parameters": [
            {
                "name": "list_of_strings",
                "type": "list[string]",
            }
        ],
        "required": [ "list_of_strings" ],
        "returns": [
            {
                "name": "concatanated_string",
                "type": "string",
            }
        ]
    },
    {
        "name": "get_sentiment_analysis",
        "description": "Performs sentiment analysis on a given list of strings, by calling a sentiment analysis model. Returns Positiveness Scale from -10 to +10 (1 increments)",
        "parameters": [
            {
                "name": "text",
                "type": "list[string]",
            }
        ],
        "required": [ "text" ],
        "returns": [
            {
                "name": "sentiment",
                "type": "int",
            }
        ]
    },
    {    
        "name": "get_mean",
        "description": "Calculates the mean of a list of integers",
        "parameters": [
            {
                "name": "nummbers",
                "type": "list[int]",
            }
        ],
        "required": [ "numbers" ],
        "returns": [
            {
                "name": "mean",
                "type": "float",
            }
        ]
    }.
    {
        "name": "send_email",
        "description": "Sends an email with the given subject, body, and recipient",
        "parameters": [
            {
                "name": "subject",
                "type": "string",
            },
            {
                "name": "body",
                "type": "string",
            },
            {
                "name": "recipient",
                "type": "string",
            }
        ],
        "required": [ "subject", "body", "recipient" ],
        "returns": []
    },
    {
        "name": "output_to_current_chat",
        "description": "Outputs a message to the current chat or conversation",
        "parameters": [
            {
                "name": "message",
                "type": "string",
            }
        ],
        "required": [ "message" ],
        "returns": []
    },
    {
        "name": "turn_into_string",
        "description": "Returns the string representation of a value of any data type",
        "parameters": [
            {
                "name": "value",
                "type": "any",
            }
        ],
        "required": [ "value" ],
        "returns": [
            {
                "name": "value_string",
                "type": "string",
            }
        ]
    },
    {
        "name": "get_fighter_stats",
        "description": "Retrieves the stats of a UFC fighter",
        "parameters": [
            {
                "name": "fighter_name",
                "type": "string",
            }
        ],
        "required": [ "fighter_name" ],
        "returns": [
            {
                "name": "stats",
                "type": "dict[string, any]",
            }
        ]
    },
    {
        "name": "construct_dict",
        "description": "Constructs a dictionary from a list of keys and a list of values",
        "parameters": [
            {
                "name": "keys",
                "type": "list[string]",
            },
            {
                "name": "values",
                "type": "list[any]",
            }
        ],
        "required": [ "keys", "values" ],
        "returns": [
            {
                "name": "dictionary",
                "type": "dict[string, any]",
            }
        ]
    }
] 
</tools><|eot_id|><|start_header_id|>user<|end_header_id|>

What is the weather like in San Francisco?<|eot_id|><|start_header_id|>assistant<|end_header_id|>

<tool_call>
{"id":"call_deok","name":"get_current_weather","arguments":{"location":"San Francisco","unit":"celsius"}}
</tool_call><|eot_id|><|start_header_id|>tool<|end_header_id|>

<tool_response>
{"id":"call_deok","result":{"temperature":"72","unit":"celsius"}}
</tool_response><|eot_id|><|start_header_id|>assistant<|end_header_id|>